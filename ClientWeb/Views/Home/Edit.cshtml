@model Entidades.Entidades.TareaForm

@Styles.Render("~/Content/datapicker")
@Styles.Render("~/Content/custom")

@{
    ViewBag.Title = "Prueba";
}

<h2>Prueba</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_tarea, htmlAttributes: new { @id = "id", Name = "id" })
        <div class="form-group">
            @Html.LabelFor(model => model.id_tarea, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id_tarea, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.id_tarea, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status_ini, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.status_ini, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.status_ini, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_status_fin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_status_fin, (IEnumerable<SelectListItem>)ViewBag._dataState, new { @class = "form-control dropdown" })
                @Html.ValidationMessageFor(model => model.id_status_fin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre_tomador, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre_tomador, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.nombre_tomador, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dni_tomador, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dni_tomador, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.dni_tomador, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono_tomador, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono_tomador, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.telefono_tomador, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="listAsegurado1">
            <table id="idTableAsegurado" class="table">
                <thead>
                    <tr>
                        <th class="width-160">DNI</th>
                        <th>Nombre</th>
                        <th class="width-160">Teléfono asegurado</th>
                        <th class="width-140">Llamar asegurado</th>
                        <th class="width-160">Fecha llamada</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.asegurados != null)
                    {
                        for (var i = 0; i < Model.asegurados.Count(); i++)
                        {
                            <tr>
                                @Html.HiddenFor(x => Model.asegurados[i].id_asegurado)
                                <td>
                                    @Html.TextBoxFor(x => Model.asegurados[i].dni, new { @class = "form-control", @readonly = "readonly" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(x => Model.asegurados[i].nombre, new { @class = "form-control", @readonly = "readonly" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(x => Model.asegurados[i].telefono, new { @class = "form-control", @type="number", Name = "telefonoDATA_" + i })
                                    @Html.ValidationMessage("telefonoDATA_" + i, "", new { @class = "text-danger" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(x => Model.asegurados[i].llamar_asegurado, new { @class = "form-control" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(x => Model.asegurados[i].fecha_hora, new { @class = "form-control" })
                                </td>
                            </tr>
                        }
                    }
else
{
                <tr><td valign="top" colspan="10" class="dataTables_empty">No existe información para presentar</td></tr>
}
                </tbody>
            </table>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/datapicker-php")
    @Scripts.Render("~/bundles/datapicker")
    @Scripts.Render("~/bundles/file-task")
}
